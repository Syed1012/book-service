name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: '17'

    - name: Grant execute permission for Maven wrapper
      run: chmod +x ./mvnw

    - name: Build the application
      run: ./mvnw clean install

    - name: Docker Build
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/book-service:latest .

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker Image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/book-service:latest

    - name: Run unit tests
      run: ./mvnw test
    
    - name: Deploy to Kubernetes
      run: |
        echo "${{ secrets.KUBE_CA_CERT }}" | base64 --decode > ./ca.crt
        echo "${{ secrets.KUBE_CLIENT_CERT }}" | base64 --decode > ./client.crt
        echo "${{ secrets.KUBE_CLIENT_KEY }}" | base64 --decode > ./client.key
        export KUBECONFIG=./kubeconfig
        cat << EOF > $KUBECONFIG
        apiVersion: v1
        clusters:
        - cluster:
            certificate-authority: ./ca.crt
            server: https://127.0.0.1:8443
          name: minikube
        contexts:
        - context:
            cluster: minikube
            user: minikube
          name: minikube
        current-context: minikube
        kind: Config
        preferences: {}
        users:
        - name: minikube
          user:
            client-certificate: ./client.crt
            client-key: ./client.key
        EOF
        
        kubectl apply -f k8s/mongodb-secret.yaml
        kubectl apply -f k8s/mongodb-deployment.yaml
        kubectl apply -f k8s/mongodb-service.yaml
        kubectl apply -f k8s/book-service-deployment.yaml
        kubectl apply -f k8s/book-service-service.yaml
